{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","reverse","map","item","indice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAAaA,U;AAEZ,0BAAc;AAAA;;AACb,WAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACA;;;;mCAGoBC,I,EAAM;AAC1B,aAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACA;;;mCAEoBC,K,EAAO;AAC3B;AACM,UAAG,CAAC,sBAAsBC,IAAtB,CAA2BD,KAA3B,CAAJ,EACI,MAAM,IAAIL,KAAJ,CAAU,kCAAV,CAAN;;AAEV;AACM,gDAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,MAAP;AAAA,cAAkBD,OAAOC,SAAS,CAAlC;AAAA,OAA/B,CAAnB;AACN","file":"DateHelper.js","sourcesContent":["export class DateHelper {\n\n\tconstructor() {\n\t\tthrow new Error('DateHelper não pode ser instanciada!');\n\t}\n\n\n\tstatic dataParaTexto(data) {\n\t\treturn `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;\n\t}\n\n\tstatic textoParaData(texto) {\n\t\t// mudamos a validação para aceitar o novo formato!\n        if(!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(texto)) \n            throw new Error('Deve estar no formato dd/mm/aaaa');\n\t\t\n\t\t// veja que usamos no split '/' no lugar de '-'. Usamos `reverse` também para ficar ano/mes/dia.      \n        return new Date(...texto.split('/').reverse().map((item, indice) => item - indice % 2));\n\t}\n\n\n}"]}