{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDAO","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDAO} from '../dao/NegociacaoDAO';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n\tconstructor() {\n\n\t\tthis._http = new HttpService();\n\t}\n\n\n\tobterNegociacoes() {\n\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\n            return negociacoes;\n        }).catch(erro => {\n        \t\n            throw new Error(erro);\n        });\n    } \n\n\n\tobterNegociacoesDaSemana() {\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/semana')\n\t\t\t.then(negociacoes => {\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t})\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana!');\n\t\t\t});\t\t\t\t\t\n\t}\n\n\n\tobterNegociacoesDaSemanaAnterior() {\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/anterior')\n\t\t\t.then(negociacoes => {\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t})\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana anterior!');\n\t\t\t});\t\t\t\t\t\n\t}\n\n\n\tobterNegociacoesDaSemanaRetrasada() {\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/retrasada')\n\t\t\t.then(negociacoes => {\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t})\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana retrasada!');\n\t\t\t});\t\t\t\t\t\n\t}\n\n\n\tcadastra(negociacao) {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDAO(connection))\n\t\t\t.then(dao => dao.adiciona(negociacao))\n\t\t\t.then(() => 'Negociação adicionada com sucesso!')\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível adicionar a negociação!');\n\t\t\t});\n\t}\n\n\n\tlista() {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDAO(connection))\n\t\t\t.then(dao => dao.listaTodos())\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações cadastradas!');\n\t\t\t});\n\t}\n\n\n\tapaga() {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDAO(connection))\n\t\t\t.then(dao => dao.apagaTodos())\n\t\t\t.then(() => 'Negociações apagadas com sucesso!')\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível apagar as negociações cadastradas!');\n\t\t\t});\t\n\t}\n\n\n\timporta(listaAtual) {\n\n\t\treturn this.obterNegociacoes()\n        \t.then(negociacoes => \n        \t\tnegociacoes.filter(negociacao =>\n        \t\t\t!listaAtual.some(negociacaoExistente =>\n        \t\t\t\tnegociacao.isEquals(negociacaoExistente)))\n        \t)\n        \t.catch(erro => {\n        \t\tconsole.log(erro);\n        \t\tthrow new Error('Não foi possível buscar negociações para importar!');\n        \t});\n\t}\n\n\n}"]}