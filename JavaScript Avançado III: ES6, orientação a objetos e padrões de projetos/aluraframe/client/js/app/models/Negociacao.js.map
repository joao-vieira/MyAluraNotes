{"version":3,"sources":["../../app-es6/models/Negociacao.js"],"names":["Negociacao","data","quantidade","valor","_data","Date","getTime","_quantidade","_valor","Object","freeze","outraNegociacao","JSON","stringify"],"mappings":";;;;;;;;;;IAAaA,U,WAAAA,U;AAEZ,qBAAYC,IAAZ,EAAkBC,UAAlB,EAA8BC,KAA9B,EAAqC;AAAA;;AACpC,OAAKC,KAAL,GAAe,IAAIC,IAAJ,CAASJ,KAAKK,OAAL,EAAT,CAAf;AACA,OAAKC,WAAL,GAAmBL,UAAnB;AACA,OAAKM,MAAL,GAAgBL,KAAhB;;AAEA;AACMM,SAAOC,MAAP,CAAc,IAAd;AACN;;;;;;AAuBD;AACA;2BACSC,e,EAAiB;AACnB,UAAOC,KAAKC,SAAL,CAAe,IAAf,KAAwBD,KAAKC,SAAL,CAAeF,eAAf,CAA/B;AACH;;;sBAxBS;AACZ,UAAO,KAAKJ,WAAL,GAAmB,KAAKC,MAA/B;AACA;;;sBAGU;AACV,UAAO,IAAIH,IAAJ,CAAS,KAAKD,KAAL,CAAWE,OAAX,EAAT,CAAP;AACA;;;sBAGgB;AAChB,UAAO,KAAKC,WAAZ;AACA;;;sBAGW;AACX,UAAO,KAAKC,MAAZ;AACA","file":"Negociacao.js","sourcesContent":["export class Negociacao {\n\n\tconstructor(data, quantidade, valor) {\n\t\tthis._data\t\t = new Date(data.getTime());\n\t\tthis._quantidade = quantidade;\n\t\tthis._valor\t\t = valor;\n\t\t\n\t\t// \"Garante\" que o objeto é retornado 'congelado', ou seja, suas propriedades não poderão ser modificadas diretamente\n        Object.freeze(this);\n\t}\n\n\t\n\tget volume() {\n\t\treturn this._quantidade * this._valor;\n\t}\n\n\n\tget data() {\n\t\treturn new Date(this._data.getTime());\n\t}\n\n\n\tget quantidade() {\n\t\treturn this._quantidade;\n\t}\n\n\n\tget valor() {\n\t\treturn this._valor;\n\t}\n\n\n\t// Simulando o comportamento de 'Encapsulamento' do paradigma OO, pois ninguém do que a classe Negociação para saber se uma negociação é igual à outra.\n\t// Com isso, podemos reaproveitar esse trecho de código em qualquer lugar, tornando nosso código mais limpo e, principalmente, encapsulado!\n\tisEquals(outraNegociacao) {        \n        return JSON.stringify(this) == JSON.stringify(outraNegociacao)\n    }\n\n\n}"]}