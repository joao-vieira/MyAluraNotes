{"version":3,"sources":["../../app-es6/dao/NegociacaoDAO.js"],"names":["NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;;;;AAAA;;;;IAEaA,a,WAAAA,a;AAEZ,wBAAYC,UAAZ,EAAwB;AAAA;;AAEvB,OAAKC,WAAL,GAAmBD,UAAnB;AACA,OAAKE,MAAL,GAAgB,aAAhB;AACA;;;;2BAGQC,U,EAAY;AAAA;;AAEpB,UAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEvC,QAAIC,UAAU,MAAKN,WAAL,CACZO,WADY,CACA,CAAC,MAAKN,MAAN,CADA,EACe,WADf,EAEZO,WAFY,CAEA,MAAKP,MAFL,EAGZQ,GAHY,CAGRP,UAHQ,CAAd;;AAKAI,YAAQI,SAAR,GAAoB,aAAK;;AAExBN;AACA,KAHD;;AAKAE,YAAQK,OAAR,GAAkB,aAAK;;AAEtBC,aAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,YAAO,yCAAP;AACA,KAJD;AAMA,IAlBM,CAAP;AAmBA;;;+BAGY;AAAA;;AAEZ,UAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEvC,QAAIY,SAAS,OAAKjB,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGXiB,UAHW,EAAb;;AAKA,QAAIC,cAAc,EAAlB;;AAEAF,WAAOP,SAAP,GAAmB,aAAK;AACvB,SAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,SAAGD,KAAH,EAAU;AAAE;;AAEX,UAAIE,OAAOF,MAAMG,KAAjB,CAFS,CAEe;;AAExBJ,kBAAYK,IAAZ,CAAiB,IAAIC,sBAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,YAAMS,QAAN,GANS,CAMS;AAClB,MAPD,MAOO;;AAENzB,cAAQe,WAAR;AACA;AACD,KAdD;;AAiBAF,WAAON,OAAP,GAAiB,aAAK;;AAErBC,aAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAec,IAA3B;AACAzB,YAAO,yCAAP;AACA,KAJD;AAMA,IAhCM,CAAP;AAiCA;;;+BAGY;AAAA;;AAEZ,UAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEvC,QAAIC,UAAU,OAAKN,WAAL,CACZO,WADY,CACA,CAAC,OAAKN,MAAN,CADA,EACe,WADf,EAEZO,WAFY,CAEA,OAAKP,MAFL,EAGZ8B,KAHY,EAAd;;AAKAzB,YAAQI,SAAR,GAAoB;AAAA,YAAKN,QAAQ,mCAAR,CAAL;AAAA,KAApB;;AAEAE,YAAQK,OAAR,GAAkB,aAAK;AACtBC,aAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,YAAO,yCAAP;AACA,KAHD;AAKA,IAdM,CAAP;AAeA","file":"NegociacaoDAO.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDAO {\n\n\tconstructor(connection) {\n\n\t\tthis._connection = connection;\n\t\tthis._store \t = 'negociacoes';\n\t}\n\n\n\tadiciona(negociacao) {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tlet request = this._connection\n\t\t\t\t.transaction([this._store], 'readwrite')\n\t\t\t\t.objectStore(this._store)\n\t\t\t\t.add(negociacao);\n\n\t\t\trequest.onsuccess = e => {\n\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = e => {\n\n\t\t\t\tconsole.log(e.target.error);\n\t\t\t\treject('Não foi possível adicionar a negociação');\n\t\t\t};\n\n\t\t});\n\t}\n\n\n\tlistaTodos() {\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tlet cursor = this._connection\n\t\t\t\t.transaction([this._store], 'readwrite')\n\t\t\t\t.objectStore(this._store)\n\t\t\t\t.openCursor();\n\n\t\t\tlet negociacoes = [];\n\n\t\t\tcursor.onsuccess = e => {\n\t\t\t\tlet atual = e.target.result;\n\t\t\t\t\n\t\t\t\tif(atual) { // Se o valor do ponteiro atual é diferente de null, ou seja, ainda existem registros para serem iterados\n\t\t\t\t\t\n\t\t\t\t\tlet dado = atual.value; // => Nesse ponteiro, me retorne o dado armazenado\n\n\t\t\t\t\tnegociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n\t\t\t\t\tatual.continue(); // Chama onsuccess novamente, porém o ponteiro vai avançar uma posição\n\t\t\t\t} else {\n\n\t\t\t\t\tresolve(negociacoes);\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\tcursor.onerror = e => {\n\n\t\t\t\tconsole.log(e.target.error.name);\n\t\t\t\treject('Não foi possível listar as negociações!');\n\t\t\t};\n\n\t\t});\n\t}\n\n\n\tapagaTodos() {\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tlet request = this._connection\n\t\t\t\t.transaction([this._store], 'readwrite')\n\t\t\t\t.objectStore(this._store)\n\t\t\t\t.clear();\n\n\t\t\trequest.onsuccess = e => resolve('Negociações apagadas com sucesso!');\n\t\t\t\n\t\t\trequest.onerror = e => {\n\t\t\t\tconsole.log(e.target.error);\n\t\t\t\treject('Não foi possível apagar as negociações!');\n\t\t\t};\n\n\t\t})\n\t}\n\n\n}"]}